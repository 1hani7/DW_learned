.push(item1, item2, ...) : 배열의 끝에 요소 추가

.pop(): 배열의 마지막 요소를 추출

.unshift(item1, item2, ...) : 배열의 시작 부분에 요소 추가

.shift(): 배열의 첫 번째 요소를 추출

.concat(array1, array2, ...) : 배열들을 이어붙여서 새로 반환

.slice(start, end) : start 인덱스부터 end 인덱스까지 요소들을 추출

.splice(start, deleteCount, item1, item2, ...) : start부터 deleteCount까지를 제거, 이후 item1, item2... 등을 추가함
                             ㄴ (추가요소는 선택사항)

.join("") : ("") 안에 들어간 문자열을 기준으로, 배열을 문자열로 바꿈

.indexOf(item, fromIndex) : item과 중복되는 첫번째 요소를 찾아서 인덱스 번호를 알려줌, 없을 경우 -1이라고 알려줌
                    ㄴ (fromIndex는 item으로부터 몇 번째 인덱스인지 / 선택사항)

.lastIndexOf(item, fromIndex): item과 중복되는 마지막 요소를 찾아서 인덱스 번호를 알려줌, 없을 경우 -1이라고 알려줌
                        ㄴ (fromIndex는 item으로부터 몇 번째 인덱스인지 / 선택사항)

.filter(function(index, value, array){}) : 배열의 요소 중, 콜백함수 내부의 조건식에 true인 것들만 return하면 그걸로 새로운 배열을 만듬

.map(function(index, value, array){}) : 배열의 각 요소들을 식으로 변형한 다음 return하면 그 결과값으로 새로운 배열을 만듬

.forEach(function(index, value, array){}) : 반복문 / 배열의 요소들을 value로, 인덱스를 index로 퉁칠 수 있음

.reduce(function(누적값, value, array){}, 초기값) : 콜백함수 내의 계산식을 통한 결과를 누적값에 담아, 하나만 남을 때까지 계속 계산 (내부값을 모두 더하거나 곱하거나 빼거나...)
                                            ㄴ (초기값은 아무 계산이 일어나지 않은 시작 시점의 누적값)

.reduceRight(function(누적값, value, array){}, 초기값) : 그냥 reduce가 첫 번째 값부터 계산했다면, 이건 마지막 값부터 계산해나감

.find(function(index, value, array){}) : 주어진 조건을 만족하는 첫 번째 요소를 가져옴

.findIndex(function(index, value, array){}function(index, value, array){}): 주어진 조건을 만족하는 첫 번째 요소의 인덱스를 가져옴, 없으면 -1을 가져옴

.sort(function(이전, 다음){}) : 정렬 메소드, 자세한 내용은 정렬 관련 문서 확인

.reverse(): 배열을 역순으로 재정렬

.includes(item, fromIndex): 특정 요소가 포함되어있으면 true, 아니면 false를 가져옴

.some(function(index, value, array){}) : 조건을 만족하는 요소가 하나라도 있으면 true, 아니면 false

.every(function(index, value, array){}) : 요소 전체가 조건을 만족하면 true, 아니면 false

.flat(몇차원아래로) : 이차원 배열 이상의 배열들을 평면적으로

.flatMap(function(index, value, array){}): .map()과 유사하지만, 새로 만드는 배열이 무조건 1차원 배열

.keys() : 배열의 요소들에 대한 인덱스 값들을 객체로 저장함

.values() : 배열의 요소들 자체를 객체로 저장함

.entries() : 배열의 요소들을 [index, value] 형태로 반환함 (이차원 이상의 배열)

.Array.from(대상) : Set을 배열로, 객체를 value값만 모아서 배열로 (배열과 비슷한 구조의 유사 배열들에게 사용 가능)

.copyWithin(target, start, end) : 매개변수로 인덱스값이 들어가며, target은 덮어쓰기 시작 위치, start와 end는 복사하는 부분의 시작과 끝 인덱스

.fill(value, start, end) : start와 end의 인덱스 만큼을 value로 꽉 채움

.toLocaleString() : 해당 내용은 검색 ( 숫자에 사용시 1000단위로 콤마(,)가 찍혀서 가독성을 챙겨줌 )

.toString(): 모든 요소들을 콤마(,)로 구분한 문자열로

.Symbol.iterator : => 이해 못했으니 보류

.findLast(function(index, value, array){}) : return된 조건문을 만족하는 마지막 요소를 가져옴

.findLastIndex(function(index, value, array){}): return된 조건문을 만족하는 마지막 요소의 인덱스값을 가져옴

.flatMapDeep(function(index, value, array){}, 몇차원까지평면화) : 중첩 배열을 평면화하고, return된 조건문에 만족하는 요소를 가져다 새로운 배열로 만듬