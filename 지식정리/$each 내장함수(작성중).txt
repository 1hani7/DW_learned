// jquery의 $.each()와 관련된 기능 및 활용

    // 간단 설명
        $.each()는 내부 콜백함수에 배열 or 객체가 들어갔을 시
        해당 배열 or 객체의 내부 요소들을 "순회"하는 반복문임


        "콜백함수"? => $.each() 안에 들어가는 function을 말함
                        $.each(무언가, function(매개변수1, 매개변수2){ 이것이 콜백함수라는 뜻 });


        "순회"? => 안에 들어있는 요소들을 한 번씩 차례대로 방문한다는 뜻
                    {예시 1}
                        const arr = [1,2,3,4,5,6,7];
                        $.each()의 콜백함수에 arr을 집어넣으면,
                        안에 들어있는 값들의 숫자만큼 반복이 되며,
                        각각의 값들을 두 번째 매개변수로 간단히 표현할 수 있음

                        무슨 소리? => arr[0], arr[1]... 로 표현해야 했던 값들을
                                     그냥 매개변수 이름(value나 item 등)으로 표현해버리면
                                     알아서 처리해준다는 뜻임

                    {예시 2}
                        const person = {
                            name : "신상수",
                            age : 26,
                            tall : 183
                        }
                        $.each()의 콜백함수에 person을 집어넣으면,
                        안에 들어있는 key값들(":"의 왼쪽에 있는 글자)의 숫자만큼 반복이 되며,
                        각각의 key 안에 들어있는 값(value)들을 두 번째 매개변수로 간단히 표현할 수 있음

                        무슨 소리? => person.name, person.age ... 로 표현해야 했던 값들을
                                     그냥 매개변수 이름(value나 item 등)으로 표현해버리면
                                     알아서 처리해준다는 뜻임



    // 배열의 경우
        $.each(arr, function(index, value){});
            배열을 넣었을 때의 콜백함수의 모습
            첫 번째 매개변수에는 index값( 현재 방문한 값이 몇 번째인가 )이 들어가고,
                                        ㄴ for(var i=0; i< ; i++)에서 i와 같은 의미
            두 번째 매개변수에는 각각의 내부 요소값들이 들어감

            무슨 소리? => value 안에는 매번 반복할 때마다 배열 안에 들어있는
                          첫 번째, 두 번째, 세 번째... 값들이 알아서 들어가게 된다는 말임.
                            ㄴ arr[0], arr[1], arr[2]...


            종합 => 첫 번째 반복에선 index가 0이며, arr[0]가 value에 들어감

                    두 번째 반복에선 index가 1이며, arr[1]가 value에 들어감

                    세 번째 반복에선 index가 2이며, arr[2]가 value에 들어감




    // 객체의 경우
        $.each(object, function(key, value){});
            객체를 넣었을 때의 콜백함수의 모습
            배열과 달리, 객체를 넣으면 첫 번째 매개변수에는 key값들(":"의 왼쪽에 있는 글자)이 차례차례 들어가게 됨

            무슨 소리? => const person = {
                            name : "신상수",
                            age : 26,
                            tall : 183
                        }
                        이 객체를 예로 들자면 반복할 때마다
                        name, age, tall이 차례대로 들어간다는 말임
            
            두 번째 매개변수에는 value값들(":"의 왼쪽에 있는 글자)이 차례차례 들어가게 됨

            무슨 소리? => const person = {
                            name : "신상수",
                            age : 26,
                            tall : 183
                        }
                        이 객체를 예로 들자면 반복할 때마다
                        "신상수", 26, 183이 차례대로 들어간다는 말임

            
            종합 => 첫 번째 반복에선 name : "신상수" 를 다룸
                         name과 "신상수"가 각각 key와 value에 들어감

                    두 번째 반복에선 age : 26 를 다룸
                         age과 26이 각각 key와 value에 들어감

                    세 번째 반복에선 tall : 183 을 다룸
                         tall과 183이 각각 key와 value에 들어감



    // 내부에 if문을 사용할 경우