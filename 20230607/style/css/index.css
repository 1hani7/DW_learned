*, *::after, *::before{
    box-sizing:border-box;
    margin:0;
    padding:0;
}

a{
    text-decoration: none;
    color:inherit;
}

ul{list-style:none;}

/*기본설정*/



#wrap{
    width:100%;
    position:relative;
}

#header{
    width:100%;
    height:94px;
    align-items:center;
    max-width:1200px;
    margin:0 auto;
    display:flex;
}

.top_image{
    width:225px;
    height:37px;
}

.top_image a{
    background:url(../image/logo.png);
    width:100%;
    height:100%;
    display:block;
    background-repeat: no-repeat;
    background-position: cover;
}

.header_menu{
    flex-grow:1;
}

.menu_list{
    display:flex;
    justify-content: flex-end;
    position:relative;
}

.menu_list > li{ /*>를 넣지 않으면 모든 자식들, 넣으면 바로 밑에 자식에게만*/
    padding:20px 30px;
    font-size:20px;
    position:relative;
}

.menu_list > li > ul{
    position:absolute;
    top:20px;
    /*absolute를 줌으로서 순열에서 벗어나, 밀어내고 있던 값을 없게 함*/
    height:0; /*글씨 모으기1*/
    width:0; /*글씨 모으기2*/
    opacity:0; /*평소엔 투명도 0으로*/
}

.menu_list > li > ul > li{
    position:relative;
    line-height:0; /*글씨 모으기3*/
}

.menu_list > li:hover ul{
    /*li에 호버한다면 ul에 적용시켜라, 라는 것이 가능함*/
    opacity:1;
    width:100%; /*글씨 펼치기*/
    left:0;
    top:67px;
}
.menu_list > li:hover ul > li{
    line-height:1; /*글자 n개 분량만큼*/ /*글씨 펼치기*/
    padding:10px 30px;
    text-align:center;
    font-size:16px;
}


#section{
    width:100%;
    margin:0 auto;
}

#img1{}

#img1 img{
    width:100%;
}

#img1 img:hover{
    transform:rotate(45deg);
    transition:all 1s;
}

#transforms{
    display:flex;
}

#move_box{
    width:100px;
    height:100px;
    background:black;
    transition:all 1s;
}

#move_box:hover{
    transform: translate(100px, -550px);
}

#zoom_box{
    width:100px;
    height:100px;
    background: burlywood;
    transition:all 0.5s;
}

#zoom_box:hover{
    transform:scale(2,1.5);
}

#skew_box{
    width:100px;
    height:100px;
    background: brown;
    transition:all 0.5s;
}
#skew_box:hover{
    transform:skew(30deg, 20deg);
}

/* 
transform - 기울기, 확대/축소, 이동, 회전

회전 - rotate  => deg(각도), turn, rad(180/3.14)
       rotateX
       rotateY 

이동 -  translate(X , Y);
        translateX();
        translateY();
        translate3d(X, Y, Z);

확대/축소 - scale(X , Y);
            scale(0.n or n or -n)

왜곡 - skew(X , Y );
*/

#matrix_box{
    width:100px;
    height:100px;
    background:blue;
    transition:all 0.5s;
}
#matrix_box:hover{
    transform:matrix(0.7, 0.7, -0.7, 0.7, 0, 0);
}

/*
matrix(a, b, c, d, e, f);
2개 이상의 효과를 동시에 적용시킬 때에 사용함

    a: scaleX 값
    b: skewY 값
    c: skewX 값
    d: scaleY 값
    e: translateX 값
    f: translateY 값
   
matrix 회전 적용시
    matrix(cos, sin, -sin, cos, 0, 0);

    45도 회전
    matrix(con45, sin45, -sin45, con45, 0, 0);
    =>matrix(0.7, 0.7, -0.7, 0.7,0 ,0);

    45도 회전 + 3배 확대
    matrix(2.1, 2.1, -2.1, 2.1, 0, 0);
            x    y     x    y

    45도 회전 + scale(3, 2) 확대
    matrix(2.1, 1.4, -2.1, 1.4, 0, 0);
            x    y     x    y
*/